
import torch
import torch.nn as nn


class Resnet101(nn.Module):

    def __init__(self):
        super(Resnet101, self).__init__()
        self.meta = {'mean': [0, 0, 0],
                     'std': [1, 1, 1],
                     'imageSize': 0}
        self.conv1 = nn.Conv2d(3, 64, kernel_size=[7, 7], stride=(2, 2), padding=(3, 3), bias=False)
        self.bn_conv1 = nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.conv1_relu = nn.ReLU()
        self.pool1 = nn.MaxPool2d(kernel_size=[3, 3], stride=[2, 2], padding=1, dilation=1, ceil_mode=False)
        self.res2a_branch1 = nn.Conv2d(64, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn2a_branch1 = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res2a_branch2a = nn.Conv2d(64, 64, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn2a_branch2a = nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res2a_branch2a_relu = nn.ReLU()
        self.res2a_branch2b = nn.Conv2d(64, 64, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn2a_branch2b = nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res2a_branch2b_relu = nn.ReLU()
        self.res2a_branch2c = nn.Conv2d(64, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn2a_branch2c = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res2a_relu = nn.ReLU()
        self.res2b_branch2a = nn.Conv2d(256, 64, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn2b_branch2a = nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res2b_branch2a_relu = nn.ReLU()
        self.res2b_branch2b = nn.Conv2d(64, 64, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn2b_branch2b = nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res2b_branch2b_relu = nn.ReLU()
        self.res2b_branch2c = nn.Conv2d(64, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn2b_branch2c = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res2b_relu = nn.ReLU()
        self.res2c_branch2a = nn.Conv2d(256, 64, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn2c_branch2a = nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res2c_branch2a_relu = nn.ReLU()
        self.res2c_branch2b = nn.Conv2d(64, 64, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn2c_branch2b = nn.BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res2c_branch2b_relu = nn.ReLU()
        self.res2c_branch2c = nn.Conv2d(64, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn2c_branch2c = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res2c_relu = nn.ReLU()
        self.res3a_branch1 = nn.Conv2d(256, 512, kernel_size=[1, 1], stride=(2, 2), bias=False)
        self.bn3a_branch1 = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3a_branch2a = nn.Conv2d(256, 128, kernel_size=[1, 1], stride=(2, 2), bias=False)
        self.bn3a_branch2a = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3a_branch2a_relu = nn.ReLU()
        self.res3a_branch2b = nn.Conv2d(128, 128, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn3a_branch2b = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3a_branch2b_relu = nn.ReLU()
        self.res3a_branch2c = nn.Conv2d(128, 512, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn3a_branch2c = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3a_relu = nn.ReLU()
        self.res3b1_branch2a = nn.Conv2d(512, 128, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn3b1_branch2a = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3b1_branch2a_relu = nn.ReLU()
        self.res3b1_branch2b = nn.Conv2d(128, 128, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn3b1_branch2b = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3b1_branch2b_relu = nn.ReLU()
        self.res3b1_branch2c = nn.Conv2d(128, 512, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn3b1_branch2c = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3b1_relu = nn.ReLU()
        self.res3b2_branch2a = nn.Conv2d(512, 128, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn3b2_branch2a = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3b2_branch2a_relu = nn.ReLU()
        self.res3b2_branch2b = nn.Conv2d(128, 128, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn3b2_branch2b = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3b2_branch2b_relu = nn.ReLU()
        self.res3b2_branch2c = nn.Conv2d(128, 512, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn3b2_branch2c = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3b2_relu = nn.ReLU()
        self.res3b3_branch2a = nn.Conv2d(512, 128, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn3b3_branch2a = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3b3_branch2a_relu = nn.ReLU()
        self.res3b3_branch2b = nn.Conv2d(128, 128, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn3b3_branch2b = nn.BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3b3_branch2b_relu = nn.ReLU()
        self.res3b3_branch2c = nn.Conv2d(128, 512, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn3b3_branch2c = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res3b3_relu = nn.ReLU()
        self.res4a_branch1 = nn.Conv2d(512, 1024, kernel_size=[1, 1], stride=(2, 2), bias=False)
        self.bn4a_branch1 = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4a_branch2a = nn.Conv2d(512, 256, kernel_size=[1, 1], stride=(2, 2), bias=False)
        self.bn4a_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4a_branch2a_relu = nn.ReLU()
        self.res4a_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4a_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4a_branch2b_relu = nn.ReLU()
        self.res4a_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4a_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4a_relu = nn.ReLU()
        self.res4b1_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b1_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b1_branch2a_relu = nn.ReLU()
        self.res4b1_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b1_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b1_branch2b_relu = nn.ReLU()
        self.res4b1_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b1_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b1_relu = nn.ReLU()
        self.res4b2_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b2_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b2_branch2a_relu = nn.ReLU()
        self.res4b2_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b2_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b2_branch2b_relu = nn.ReLU()
        self.res4b2_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b2_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b2_relu = nn.ReLU()
        self.res4b3_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b3_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b3_branch2a_relu = nn.ReLU()
        self.res4b3_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b3_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b3_branch2b_relu = nn.ReLU()
        self.res4b3_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b3_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b3_relu = nn.ReLU()
        self.res4b4_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b4_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b4_branch2a_relu = nn.ReLU()
        self.res4b4_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b4_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b4_branch2b_relu = nn.ReLU()
        self.res4b4_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b4_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b4_relu = nn.ReLU()
        self.res4b5_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b5_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b5_branch2a_relu = nn.ReLU()
        self.res4b5_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b5_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b5_branch2b_relu = nn.ReLU()
        self.res4b5_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b5_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b5_relu = nn.ReLU()
        self.res4b6_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b6_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b6_branch2a_relu = nn.ReLU()
        self.res4b6_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b6_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b6_branch2b_relu = nn.ReLU()
        self.res4b6_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b6_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b6_relu = nn.ReLU()
        self.res4b7_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b7_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b7_branch2a_relu = nn.ReLU()
        self.res4b7_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b7_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b7_branch2b_relu = nn.ReLU()
        self.res4b7_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b7_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b7_relu = nn.ReLU()
        self.res4b8_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b8_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b8_branch2a_relu = nn.ReLU()
        self.res4b8_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b8_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b8_branch2b_relu = nn.ReLU()
        self.res4b8_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b8_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b8_relu = nn.ReLU()
        self.res4b9_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b9_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b9_branch2a_relu = nn.ReLU()
        self.res4b9_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b9_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b9_branch2b_relu = nn.ReLU()
        self.res4b9_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b9_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b9_relu = nn.ReLU()
        self.res4b10_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b10_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b10_branch2a_relu = nn.ReLU()
        self.res4b10_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b10_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b10_branch2b_relu = nn.ReLU()
        self.res4b10_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b10_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b10_relu = nn.ReLU()
        self.res4b11_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b11_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b11_branch2a_relu = nn.ReLU()
        self.res4b11_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b11_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b11_branch2b_relu = nn.ReLU()
        self.res4b11_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b11_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b11_relu = nn.ReLU()
        self.res4b12_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b12_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b12_branch2a_relu = nn.ReLU()
        self.res4b12_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b12_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b12_branch2b_relu = nn.ReLU()
        self.res4b12_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b12_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b12_relu = nn.ReLU()
        self.res4b13_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b13_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b13_branch2a_relu = nn.ReLU()
        self.res4b13_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b13_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b13_branch2b_relu = nn.ReLU()
        self.res4b13_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b13_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b13_relu = nn.ReLU()
        self.res4b14_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b14_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b14_branch2a_relu = nn.ReLU()
        self.res4b14_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b14_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b14_branch2b_relu = nn.ReLU()
        self.res4b14_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b14_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b14_relu = nn.ReLU()
        self.res4b15_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b15_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b15_branch2a_relu = nn.ReLU()
        self.res4b15_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b15_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b15_branch2b_relu = nn.ReLU()
        self.res4b15_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b15_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b15_relu = nn.ReLU()
        self.res4b16_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b16_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b16_branch2a_relu = nn.ReLU()
        self.res4b16_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b16_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b16_branch2b_relu = nn.ReLU()
        self.res4b16_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b16_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b16_relu = nn.ReLU()
        self.res4b17_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b17_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b17_branch2a_relu = nn.ReLU()
        self.res4b17_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b17_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b17_branch2b_relu = nn.ReLU()
        self.res4b17_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b17_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b17_relu = nn.ReLU()
        self.res4b18_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b18_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b18_branch2a_relu = nn.ReLU()
        self.res4b18_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b18_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b18_branch2b_relu = nn.ReLU()
        self.res4b18_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b18_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b18_relu = nn.ReLU()
        self.res4b19_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b19_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b19_branch2a_relu = nn.ReLU()
        self.res4b19_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b19_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b19_branch2b_relu = nn.ReLU()
        self.res4b19_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b19_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b19_relu = nn.ReLU()
        self.res4b20_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b20_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b20_branch2a_relu = nn.ReLU()
        self.res4b20_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b20_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b20_branch2b_relu = nn.ReLU()
        self.res4b20_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b20_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b20_relu = nn.ReLU()
        self.res4b21_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b21_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b21_branch2a_relu = nn.ReLU()
        self.res4b21_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b21_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b21_branch2b_relu = nn.ReLU()
        self.res4b21_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b21_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b21_relu = nn.ReLU()
        self.res4b22_branch2a = nn.Conv2d(1024, 256, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b22_branch2a = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b22_branch2a_relu = nn.ReLU()
        self.res4b22_branch2b = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn4b22_branch2b = nn.BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b22_branch2b_relu = nn.ReLU()
        self.res4b22_branch2c = nn.Conv2d(256, 1024, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn4b22_branch2c = nn.BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res4b22_relu = nn.ReLU()
        self.res5a_branch1 = nn.Conv2d(1024, 2048, kernel_size=[1, 1], stride=(2, 2), bias=False)
        self.bn5a_branch1 = nn.BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res5a_branch2a = nn.Conv2d(1024, 512, kernel_size=[1, 1], stride=(2, 2), bias=False)
        self.bn5a_branch2a = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res5a_branch2a_relu = nn.ReLU()
        self.res5a_branch2b = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn5a_branch2b = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res5a_branch2b_relu = nn.ReLU()
        self.res5a_branch2c = nn.Conv2d(512, 2048, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn5a_branch2c = nn.BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res5a_relu = nn.ReLU()
        self.res5b_branch2a = nn.Conv2d(2048, 512, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn5b_branch2a = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res5b_branch2a_relu = nn.ReLU()
        self.res5b_branch2b = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn5b_branch2b = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res5b_branch2b_relu = nn.ReLU()
        self.res5b_branch2c = nn.Conv2d(512, 2048, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn5b_branch2c = nn.BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res5b_relu = nn.ReLU()
        self.res5c_branch2a = nn.Conv2d(2048, 512, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn5c_branch2a = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res5c_branch2a_relu = nn.ReLU()
        self.res5c_branch2b = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.bn5c_branch2b = nn.BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res5c_branch2b_relu = nn.ReLU()
        self.res5c_branch2c = nn.Conv2d(512, 2048, kernel_size=[1, 1], stride=(1, 1), bias=False)
        self.bn5c_branch2c = nn.BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        self.res5c_relu = nn.ReLU()
        self.res5cx_dropout = nn.Dropout(p=0.5, inplace=False)
        self.res4b22x_dropout = nn.Dropout(p=0.5, inplace=False)
        self.res3b3x_copy = nn.Identity()
        self.res2cx_copy = nn.Identity()

    def forward(self, data):
        conv1 = self.conv1(data)
        conv1x = self.bn_conv1(conv1)
        conv1xxx = self.conv1_relu(conv1x)
        pool1 = self.pool1(conv1xxx)
        res2a_branch1 = self.res2a_branch1(pool1)
        res2a_branch1x = self.bn2a_branch1(res2a_branch1)
        res2a_branch2a = self.res2a_branch2a(pool1)
        res2a_branch2ax = self.bn2a_branch2a(res2a_branch2a)
        res2a_branch2axxx = self.res2a_branch2a_relu(res2a_branch2ax)
        res2a_branch2b = self.res2a_branch2b(res2a_branch2axxx)
        res2a_branch2bx = self.bn2a_branch2b(res2a_branch2b)
        res2a_branch2bxxx = self.res2a_branch2b_relu(res2a_branch2bx)
        res2a_branch2c = self.res2a_branch2c(res2a_branch2bxxx)
        res2a_branch2cx = self.bn2a_branch2c(res2a_branch2c)
        res2a = torch.add(res2a_branch1x, 1, res2a_branch2cx)
        res2ax = self.res2a_relu(res2a)
        res2b_branch2a = self.res2b_branch2a(res2ax)
        res2b_branch2ax = self.bn2b_branch2a(res2b_branch2a)
        res2b_branch2axxx = self.res2b_branch2a_relu(res2b_branch2ax)
        res2b_branch2b = self.res2b_branch2b(res2b_branch2axxx)
        res2b_branch2bx = self.bn2b_branch2b(res2b_branch2b)
        res2b_branch2bxxx = self.res2b_branch2b_relu(res2b_branch2bx)
        res2b_branch2c = self.res2b_branch2c(res2b_branch2bxxx)
        res2b_branch2cx = self.bn2b_branch2c(res2b_branch2c)
        res2b = torch.add(res2ax, 1, res2b_branch2cx)
        res2bx = self.res2b_relu(res2b)
        res2c_branch2a = self.res2c_branch2a(res2bx)
        res2c_branch2ax = self.bn2c_branch2a(res2c_branch2a)
        res2c_branch2axxx = self.res2c_branch2a_relu(res2c_branch2ax)
        res2c_branch2b = self.res2c_branch2b(res2c_branch2axxx)
        res2c_branch2bx = self.bn2c_branch2b(res2c_branch2b)
        res2c_branch2bxxx = self.res2c_branch2b_relu(res2c_branch2bx)
        res2c_branch2c = self.res2c_branch2c(res2c_branch2bxxx)
        res2c_branch2cx = self.bn2c_branch2c(res2c_branch2c)
        res2c = torch.add(res2bx, 1, res2c_branch2cx)
        res2cx = self.res2c_relu(res2c)
        res3a_branch1 = self.res3a_branch1(res2cx)
        res3a_branch1x = self.bn3a_branch1(res3a_branch1)
        res3a_branch2a = self.res3a_branch2a(res2cx)
        res3a_branch2ax = self.bn3a_branch2a(res3a_branch2a)
        res3a_branch2axxx = self.res3a_branch2a_relu(res3a_branch2ax)
        res3a_branch2b = self.res3a_branch2b(res3a_branch2axxx)
        res3a_branch2bx = self.bn3a_branch2b(res3a_branch2b)
        res3a_branch2bxxx = self.res3a_branch2b_relu(res3a_branch2bx)
        res3a_branch2c = self.res3a_branch2c(res3a_branch2bxxx)
        res3a_branch2cx = self.bn3a_branch2c(res3a_branch2c)
        res3a = torch.add(res3a_branch1x, 1, res3a_branch2cx)
        res3ax = self.res3a_relu(res3a)
        res3b1_branch2a = self.res3b1_branch2a(res3ax)
        res3b1_branch2ax = self.bn3b1_branch2a(res3b1_branch2a)
        res3b1_branch2axxx = self.res3b1_branch2a_relu(res3b1_branch2ax)
        res3b1_branch2b = self.res3b1_branch2b(res3b1_branch2axxx)
        res3b1_branch2bx = self.bn3b1_branch2b(res3b1_branch2b)
        res3b1_branch2bxxx = self.res3b1_branch2b_relu(res3b1_branch2bx)
        res3b1_branch2c = self.res3b1_branch2c(res3b1_branch2bxxx)
        res3b1_branch2cx = self.bn3b1_branch2c(res3b1_branch2c)
        res3b1 = torch.add(res3ax, 1, res3b1_branch2cx)
        res3b1x = self.res3b1_relu(res3b1)
        res3b2_branch2a = self.res3b2_branch2a(res3b1x)
        res3b2_branch2ax = self.bn3b2_branch2a(res3b2_branch2a)
        res3b2_branch2axxx = self.res3b2_branch2a_relu(res3b2_branch2ax)
        res3b2_branch2b = self.res3b2_branch2b(res3b2_branch2axxx)
        res3b2_branch2bx = self.bn3b2_branch2b(res3b2_branch2b)
        res3b2_branch2bxxx = self.res3b2_branch2b_relu(res3b2_branch2bx)
        res3b2_branch2c = self.res3b2_branch2c(res3b2_branch2bxxx)
        res3b2_branch2cx = self.bn3b2_branch2c(res3b2_branch2c)
        res3b2 = torch.add(res3b1x, 1, res3b2_branch2cx)
        res3b2x = self.res3b2_relu(res3b2)
        res3b3_branch2a = self.res3b3_branch2a(res3b2x)
        res3b3_branch2ax = self.bn3b3_branch2a(res3b3_branch2a)
        res3b3_branch2axxx = self.res3b3_branch2a_relu(res3b3_branch2ax)
        res3b3_branch2b = self.res3b3_branch2b(res3b3_branch2axxx)
        res3b3_branch2bx = self.bn3b3_branch2b(res3b3_branch2b)
        res3b3_branch2bxxx = self.res3b3_branch2b_relu(res3b3_branch2bx)
        res3b3_branch2c = self.res3b3_branch2c(res3b3_branch2bxxx)
        res3b3_branch2cx = self.bn3b3_branch2c(res3b3_branch2c)
        res3b3 = torch.add(res3b2x, 1, res3b3_branch2cx)
        res3b3x = self.res3b3_relu(res3b3)
        res4a_branch1 = self.res4a_branch1(res3b3x)
        res4a_branch1x = self.bn4a_branch1(res4a_branch1)
        res4a_branch2a = self.res4a_branch2a(res3b3x)
        res4a_branch2ax = self.bn4a_branch2a(res4a_branch2a)
        res4a_branch2axxx = self.res4a_branch2a_relu(res4a_branch2ax)
        res4a_branch2b = self.res4a_branch2b(res4a_branch2axxx)
        res4a_branch2bx = self.bn4a_branch2b(res4a_branch2b)
        res4a_branch2bxxx = self.res4a_branch2b_relu(res4a_branch2bx)
        res4a_branch2c = self.res4a_branch2c(res4a_branch2bxxx)
        res4a_branch2cx = self.bn4a_branch2c(res4a_branch2c)
        res4a = torch.add(res4a_branch1x, 1, res4a_branch2cx)
        res4ax = self.res4a_relu(res4a)
        res4b1_branch2a = self.res4b1_branch2a(res4ax)
        res4b1_branch2ax = self.bn4b1_branch2a(res4b1_branch2a)
        res4b1_branch2axxx = self.res4b1_branch2a_relu(res4b1_branch2ax)
        res4b1_branch2b = self.res4b1_branch2b(res4b1_branch2axxx)
        res4b1_branch2bx = self.bn4b1_branch2b(res4b1_branch2b)
        res4b1_branch2bxxx = self.res4b1_branch2b_relu(res4b1_branch2bx)
        res4b1_branch2c = self.res4b1_branch2c(res4b1_branch2bxxx)
        res4b1_branch2cx = self.bn4b1_branch2c(res4b1_branch2c)
        res4b1 = torch.add(res4ax, 1, res4b1_branch2cx)
        res4b1x = self.res4b1_relu(res4b1)
        res4b2_branch2a = self.res4b2_branch2a(res4b1x)
        res4b2_branch2ax = self.bn4b2_branch2a(res4b2_branch2a)
        res4b2_branch2axxx = self.res4b2_branch2a_relu(res4b2_branch2ax)
        res4b2_branch2b = self.res4b2_branch2b(res4b2_branch2axxx)
        res4b2_branch2bx = self.bn4b2_branch2b(res4b2_branch2b)
        res4b2_branch2bxxx = self.res4b2_branch2b_relu(res4b2_branch2bx)
        res4b2_branch2c = self.res4b2_branch2c(res4b2_branch2bxxx)
        res4b2_branch2cx = self.bn4b2_branch2c(res4b2_branch2c)
        res4b2 = torch.add(res4b1x, 1, res4b2_branch2cx)
        res4b2x = self.res4b2_relu(res4b2)
        res4b3_branch2a = self.res4b3_branch2a(res4b2x)
        res4b3_branch2ax = self.bn4b3_branch2a(res4b3_branch2a)
        res4b3_branch2axxx = self.res4b3_branch2a_relu(res4b3_branch2ax)
        res4b3_branch2b = self.res4b3_branch2b(res4b3_branch2axxx)
        res4b3_branch2bx = self.bn4b3_branch2b(res4b3_branch2b)
        res4b3_branch2bxxx = self.res4b3_branch2b_relu(res4b3_branch2bx)
        res4b3_branch2c = self.res4b3_branch2c(res4b3_branch2bxxx)
        res4b3_branch2cx = self.bn4b3_branch2c(res4b3_branch2c)
        res4b3 = torch.add(res4b2x, 1, res4b3_branch2cx)
        res4b3x = self.res4b3_relu(res4b3)
        res4b4_branch2a = self.res4b4_branch2a(res4b3x)
        res4b4_branch2ax = self.bn4b4_branch2a(res4b4_branch2a)
        res4b4_branch2axxx = self.res4b4_branch2a_relu(res4b4_branch2ax)
        res4b4_branch2b = self.res4b4_branch2b(res4b4_branch2axxx)
        res4b4_branch2bx = self.bn4b4_branch2b(res4b4_branch2b)
        res4b4_branch2bxxx = self.res4b4_branch2b_relu(res4b4_branch2bx)
        res4b4_branch2c = self.res4b4_branch2c(res4b4_branch2bxxx)
        res4b4_branch2cx = self.bn4b4_branch2c(res4b4_branch2c)
        res4b4 = torch.add(res4b3x, 1, res4b4_branch2cx)
        res4b4x = self.res4b4_relu(res4b4)
        res4b5_branch2a = self.res4b5_branch2a(res4b4x)
        res4b5_branch2ax = self.bn4b5_branch2a(res4b5_branch2a)
        res4b5_branch2axxx = self.res4b5_branch2a_relu(res4b5_branch2ax)
        res4b5_branch2b = self.res4b5_branch2b(res4b5_branch2axxx)
        res4b5_branch2bx = self.bn4b5_branch2b(res4b5_branch2b)
        res4b5_branch2bxxx = self.res4b5_branch2b_relu(res4b5_branch2bx)
        res4b5_branch2c = self.res4b5_branch2c(res4b5_branch2bxxx)
        res4b5_branch2cx = self.bn4b5_branch2c(res4b5_branch2c)
        res4b5 = torch.add(res4b4x, 1, res4b5_branch2cx)
        res4b5x = self.res4b5_relu(res4b5)
        res4b6_branch2a = self.res4b6_branch2a(res4b5x)
        res4b6_branch2ax = self.bn4b6_branch2a(res4b6_branch2a)
        res4b6_branch2axxx = self.res4b6_branch2a_relu(res4b6_branch2ax)
        res4b6_branch2b = self.res4b6_branch2b(res4b6_branch2axxx)
        res4b6_branch2bx = self.bn4b6_branch2b(res4b6_branch2b)
        res4b6_branch2bxxx = self.res4b6_branch2b_relu(res4b6_branch2bx)
        res4b6_branch2c = self.res4b6_branch2c(res4b6_branch2bxxx)
        res4b6_branch2cx = self.bn4b6_branch2c(res4b6_branch2c)
        res4b6 = torch.add(res4b5x, 1, res4b6_branch2cx)
        res4b6x = self.res4b6_relu(res4b6)
        res4b7_branch2a = self.res4b7_branch2a(res4b6x)
        res4b7_branch2ax = self.bn4b7_branch2a(res4b7_branch2a)
        res4b7_branch2axxx = self.res4b7_branch2a_relu(res4b7_branch2ax)
        res4b7_branch2b = self.res4b7_branch2b(res4b7_branch2axxx)
        res4b7_branch2bx = self.bn4b7_branch2b(res4b7_branch2b)
        res4b7_branch2bxxx = self.res4b7_branch2b_relu(res4b7_branch2bx)
        res4b7_branch2c = self.res4b7_branch2c(res4b7_branch2bxxx)
        res4b7_branch2cx = self.bn4b7_branch2c(res4b7_branch2c)
        res4b7 = torch.add(res4b6x, 1, res4b7_branch2cx)
        res4b7x = self.res4b7_relu(res4b7)
        res4b8_branch2a = self.res4b8_branch2a(res4b7x)
        res4b8_branch2ax = self.bn4b8_branch2a(res4b8_branch2a)
        res4b8_branch2axxx = self.res4b8_branch2a_relu(res4b8_branch2ax)
        res4b8_branch2b = self.res4b8_branch2b(res4b8_branch2axxx)
        res4b8_branch2bx = self.bn4b8_branch2b(res4b8_branch2b)
        res4b8_branch2bxxx = self.res4b8_branch2b_relu(res4b8_branch2bx)
        res4b8_branch2c = self.res4b8_branch2c(res4b8_branch2bxxx)
        res4b8_branch2cx = self.bn4b8_branch2c(res4b8_branch2c)
        res4b8 = torch.add(res4b7x, 1, res4b8_branch2cx)
        res4b8x = self.res4b8_relu(res4b8)
        res4b9_branch2a = self.res4b9_branch2a(res4b8x)
        res4b9_branch2ax = self.bn4b9_branch2a(res4b9_branch2a)
        res4b9_branch2axxx = self.res4b9_branch2a_relu(res4b9_branch2ax)
        res4b9_branch2b = self.res4b9_branch2b(res4b9_branch2axxx)
        res4b9_branch2bx = self.bn4b9_branch2b(res4b9_branch2b)
        res4b9_branch2bxxx = self.res4b9_branch2b_relu(res4b9_branch2bx)
        res4b9_branch2c = self.res4b9_branch2c(res4b9_branch2bxxx)
        res4b9_branch2cx = self.bn4b9_branch2c(res4b9_branch2c)
        res4b9 = torch.add(res4b8x, 1, res4b9_branch2cx)
        res4b9x = self.res4b9_relu(res4b9)
        res4b10_branch2a = self.res4b10_branch2a(res4b9x)
        res4b10_branch2ax = self.bn4b10_branch2a(res4b10_branch2a)
        res4b10_branch2axxx = self.res4b10_branch2a_relu(res4b10_branch2ax)
        res4b10_branch2b = self.res4b10_branch2b(res4b10_branch2axxx)
        res4b10_branch2bx = self.bn4b10_branch2b(res4b10_branch2b)
        res4b10_branch2bxxx = self.res4b10_branch2b_relu(res4b10_branch2bx)
        res4b10_branch2c = self.res4b10_branch2c(res4b10_branch2bxxx)
        res4b10_branch2cx = self.bn4b10_branch2c(res4b10_branch2c)
        res4b10 = torch.add(res4b9x, 1, res4b10_branch2cx)
        res4b10x = self.res4b10_relu(res4b10)
        res4b11_branch2a = self.res4b11_branch2a(res4b10x)
        res4b11_branch2ax = self.bn4b11_branch2a(res4b11_branch2a)
        res4b11_branch2axxx = self.res4b11_branch2a_relu(res4b11_branch2ax)
        res4b11_branch2b = self.res4b11_branch2b(res4b11_branch2axxx)
        res4b11_branch2bx = self.bn4b11_branch2b(res4b11_branch2b)
        res4b11_branch2bxxx = self.res4b11_branch2b_relu(res4b11_branch2bx)
        res4b11_branch2c = self.res4b11_branch2c(res4b11_branch2bxxx)
        res4b11_branch2cx = self.bn4b11_branch2c(res4b11_branch2c)
        res4b11 = torch.add(res4b10x, 1, res4b11_branch2cx)
        res4b11x = self.res4b11_relu(res4b11)
        res4b12_branch2a = self.res4b12_branch2a(res4b11x)
        res4b12_branch2ax = self.bn4b12_branch2a(res4b12_branch2a)
        res4b12_branch2axxx = self.res4b12_branch2a_relu(res4b12_branch2ax)
        res4b12_branch2b = self.res4b12_branch2b(res4b12_branch2axxx)
        res4b12_branch2bx = self.bn4b12_branch2b(res4b12_branch2b)
        res4b12_branch2bxxx = self.res4b12_branch2b_relu(res4b12_branch2bx)
        res4b12_branch2c = self.res4b12_branch2c(res4b12_branch2bxxx)
        res4b12_branch2cx = self.bn4b12_branch2c(res4b12_branch2c)
        res4b12 = torch.add(res4b11x, 1, res4b12_branch2cx)
        res4b12x = self.res4b12_relu(res4b12)
        res4b13_branch2a = self.res4b13_branch2a(res4b12x)
        res4b13_branch2ax = self.bn4b13_branch2a(res4b13_branch2a)
        res4b13_branch2axxx = self.res4b13_branch2a_relu(res4b13_branch2ax)
        res4b13_branch2b = self.res4b13_branch2b(res4b13_branch2axxx)
        res4b13_branch2bx = self.bn4b13_branch2b(res4b13_branch2b)
        res4b13_branch2bxxx = self.res4b13_branch2b_relu(res4b13_branch2bx)
        res4b13_branch2c = self.res4b13_branch2c(res4b13_branch2bxxx)
        res4b13_branch2cx = self.bn4b13_branch2c(res4b13_branch2c)
        res4b13 = torch.add(res4b12x, 1, res4b13_branch2cx)
        res4b13x = self.res4b13_relu(res4b13)
        res4b14_branch2a = self.res4b14_branch2a(res4b13x)
        res4b14_branch2ax = self.bn4b14_branch2a(res4b14_branch2a)
        res4b14_branch2axxx = self.res4b14_branch2a_relu(res4b14_branch2ax)
        res4b14_branch2b = self.res4b14_branch2b(res4b14_branch2axxx)
        res4b14_branch2bx = self.bn4b14_branch2b(res4b14_branch2b)
        res4b14_branch2bxxx = self.res4b14_branch2b_relu(res4b14_branch2bx)
        res4b14_branch2c = self.res4b14_branch2c(res4b14_branch2bxxx)
        res4b14_branch2cx = self.bn4b14_branch2c(res4b14_branch2c)
        res4b14 = torch.add(res4b13x, 1, res4b14_branch2cx)
        res4b14x = self.res4b14_relu(res4b14)
        res4b15_branch2a = self.res4b15_branch2a(res4b14x)
        res4b15_branch2ax = self.bn4b15_branch2a(res4b15_branch2a)
        res4b15_branch2axxx = self.res4b15_branch2a_relu(res4b15_branch2ax)
        res4b15_branch2b = self.res4b15_branch2b(res4b15_branch2axxx)
        res4b15_branch2bx = self.bn4b15_branch2b(res4b15_branch2b)
        res4b15_branch2bxxx = self.res4b15_branch2b_relu(res4b15_branch2bx)
        res4b15_branch2c = self.res4b15_branch2c(res4b15_branch2bxxx)
        res4b15_branch2cx = self.bn4b15_branch2c(res4b15_branch2c)
        res4b15 = torch.add(res4b14x, 1, res4b15_branch2cx)
        res4b15x = self.res4b15_relu(res4b15)
        res4b16_branch2a = self.res4b16_branch2a(res4b15x)
        res4b16_branch2ax = self.bn4b16_branch2a(res4b16_branch2a)
        res4b16_branch2axxx = self.res4b16_branch2a_relu(res4b16_branch2ax)
        res4b16_branch2b = self.res4b16_branch2b(res4b16_branch2axxx)
        res4b16_branch2bx = self.bn4b16_branch2b(res4b16_branch2b)
        res4b16_branch2bxxx = self.res4b16_branch2b_relu(res4b16_branch2bx)
        res4b16_branch2c = self.res4b16_branch2c(res4b16_branch2bxxx)
        res4b16_branch2cx = self.bn4b16_branch2c(res4b16_branch2c)
        res4b16 = torch.add(res4b15x, 1, res4b16_branch2cx)
        res4b16x = self.res4b16_relu(res4b16)
        res4b17_branch2a = self.res4b17_branch2a(res4b16x)
        res4b17_branch2ax = self.bn4b17_branch2a(res4b17_branch2a)
        res4b17_branch2axxx = self.res4b17_branch2a_relu(res4b17_branch2ax)
        res4b17_branch2b = self.res4b17_branch2b(res4b17_branch2axxx)
        res4b17_branch2bx = self.bn4b17_branch2b(res4b17_branch2b)
        res4b17_branch2bxxx = self.res4b17_branch2b_relu(res4b17_branch2bx)
        res4b17_branch2c = self.res4b17_branch2c(res4b17_branch2bxxx)
        res4b17_branch2cx = self.bn4b17_branch2c(res4b17_branch2c)
        res4b17 = torch.add(res4b16x, 1, res4b17_branch2cx)
        res4b17x = self.res4b17_relu(res4b17)
        res4b18_branch2a = self.res4b18_branch2a(res4b17x)
        res4b18_branch2ax = self.bn4b18_branch2a(res4b18_branch2a)
        res4b18_branch2axxx = self.res4b18_branch2a_relu(res4b18_branch2ax)
        res4b18_branch2b = self.res4b18_branch2b(res4b18_branch2axxx)
        res4b18_branch2bx = self.bn4b18_branch2b(res4b18_branch2b)
        res4b18_branch2bxxx = self.res4b18_branch2b_relu(res4b18_branch2bx)
        res4b18_branch2c = self.res4b18_branch2c(res4b18_branch2bxxx)
        res4b18_branch2cx = self.bn4b18_branch2c(res4b18_branch2c)
        res4b18 = torch.add(res4b17x, 1, res4b18_branch2cx)
        res4b18x = self.res4b18_relu(res4b18)
        res4b19_branch2a = self.res4b19_branch2a(res4b18x)
        res4b19_branch2ax = self.bn4b19_branch2a(res4b19_branch2a)
        res4b19_branch2axxx = self.res4b19_branch2a_relu(res4b19_branch2ax)
        res4b19_branch2b = self.res4b19_branch2b(res4b19_branch2axxx)
        res4b19_branch2bx = self.bn4b19_branch2b(res4b19_branch2b)
        res4b19_branch2bxxx = self.res4b19_branch2b_relu(res4b19_branch2bx)
        res4b19_branch2c = self.res4b19_branch2c(res4b19_branch2bxxx)
        res4b19_branch2cx = self.bn4b19_branch2c(res4b19_branch2c)
        res4b19 = torch.add(res4b18x, 1, res4b19_branch2cx)
        res4b19x = self.res4b19_relu(res4b19)
        res4b20_branch2a = self.res4b20_branch2a(res4b19x)
        res4b20_branch2ax = self.bn4b20_branch2a(res4b20_branch2a)
        res4b20_branch2axxx = self.res4b20_branch2a_relu(res4b20_branch2ax)
        res4b20_branch2b = self.res4b20_branch2b(res4b20_branch2axxx)
        res4b20_branch2bx = self.bn4b20_branch2b(res4b20_branch2b)
        res4b20_branch2bxxx = self.res4b20_branch2b_relu(res4b20_branch2bx)
        res4b20_branch2c = self.res4b20_branch2c(res4b20_branch2bxxx)
        res4b20_branch2cx = self.bn4b20_branch2c(res4b20_branch2c)
        res4b20 = torch.add(res4b19x, 1, res4b20_branch2cx)
        res4b20x = self.res4b20_relu(res4b20)
        res4b21_branch2a = self.res4b21_branch2a(res4b20x)
        res4b21_branch2ax = self.bn4b21_branch2a(res4b21_branch2a)
        res4b21_branch2axxx = self.res4b21_branch2a_relu(res4b21_branch2ax)
        res4b21_branch2b = self.res4b21_branch2b(res4b21_branch2axxx)
        res4b21_branch2bx = self.bn4b21_branch2b(res4b21_branch2b)
        res4b21_branch2bxxx = self.res4b21_branch2b_relu(res4b21_branch2bx)
        res4b21_branch2c = self.res4b21_branch2c(res4b21_branch2bxxx)
        res4b21_branch2cx = self.bn4b21_branch2c(res4b21_branch2c)
        res4b21 = torch.add(res4b20x, 1, res4b21_branch2cx)
        res4b21x = self.res4b21_relu(res4b21)
        res4b22_branch2a = self.res4b22_branch2a(res4b21x)
        res4b22_branch2ax = self.bn4b22_branch2a(res4b22_branch2a)
        res4b22_branch2axxx = self.res4b22_branch2a_relu(res4b22_branch2ax)
        res4b22_branch2b = self.res4b22_branch2b(res4b22_branch2axxx)
        res4b22_branch2bx = self.bn4b22_branch2b(res4b22_branch2b)
        res4b22_branch2bxxx = self.res4b22_branch2b_relu(res4b22_branch2bx)
        res4b22_branch2c = self.res4b22_branch2c(res4b22_branch2bxxx)
        res4b22_branch2cx = self.bn4b22_branch2c(res4b22_branch2c)
        res4b22 = torch.add(res4b21x, 1, res4b22_branch2cx)
        res4b22x = self.res4b22_relu(res4b22)
        res5a_branch1 = self.res5a_branch1(res4b22x)
        res5a_branch1x = self.bn5a_branch1(res5a_branch1)
        res5a_branch2a = self.res5a_branch2a(res4b22x)
        res5a_branch2ax = self.bn5a_branch2a(res5a_branch2a)
        res5a_branch2axxx = self.res5a_branch2a_relu(res5a_branch2ax)
        res5a_branch2b = self.res5a_branch2b(res5a_branch2axxx)
        res5a_branch2bx = self.bn5a_branch2b(res5a_branch2b)
        res5a_branch2bxxx = self.res5a_branch2b_relu(res5a_branch2bx)
        res5a_branch2c = self.res5a_branch2c(res5a_branch2bxxx)
        res5a_branch2cx = self.bn5a_branch2c(res5a_branch2c)
        res5a = torch.add(res5a_branch1x, 1, res5a_branch2cx)
        res5ax = self.res5a_relu(res5a)
        res5b_branch2a = self.res5b_branch2a(res5ax)
        res5b_branch2ax = self.bn5b_branch2a(res5b_branch2a)
        res5b_branch2axxx = self.res5b_branch2a_relu(res5b_branch2ax)
        res5b_branch2b = self.res5b_branch2b(res5b_branch2axxx)
        res5b_branch2bx = self.bn5b_branch2b(res5b_branch2b)
        res5b_branch2bxxx = self.res5b_branch2b_relu(res5b_branch2bx)
        res5b_branch2c = self.res5b_branch2c(res5b_branch2bxxx)
        res5b_branch2cx = self.bn5b_branch2c(res5b_branch2c)
        res5b = torch.add(res5ax, 1, res5b_branch2cx)
        res5bx = self.res5b_relu(res5b)
        res5c_branch2a = self.res5c_branch2a(res5bx)
        res5c_branch2ax = self.bn5c_branch2a(res5c_branch2a)
        res5c_branch2axxx = self.res5c_branch2a_relu(res5c_branch2ax)
        res5c_branch2b = self.res5c_branch2b(res5c_branch2axxx)
        res5c_branch2bx = self.bn5c_branch2b(res5c_branch2b)
        res5c_branch2bxxx = self.res5c_branch2b_relu(res5c_branch2bx)
        res5c_branch2c = self.res5c_branch2c(res5c_branch2bxxx)
        res5c_branch2cx = self.bn5c_branch2c(res5c_branch2c)
        res5c = torch.add(res5bx, 1, res5c_branch2cx)
        res5cx = self.res5c_relu(res5c)
        res5cx_dropout_varout = self.res5cx_dropout(res5cx)
        res4b22x_dropout_varout = self.res4b22x_dropout(res4b22x)
        res3b3x_copy_varout = self.res3b3x_copy(res3b3x)
        res2cx_copy_varout = self.res2cx_copy(res2cx)
        return res5cx_dropout_varout, res4b22x_dropout_varout, res3b3x_copy_varout, res2cx_copy_varout

def resnet101(weights_path=None, **kwargs):
    """
    load imported model instance

    Args:
        weights_path (str): If set, loads model weights from the given path
    """
    model = Resnet101()
    if weights_path:
        state_dict = torch.load(weights_path)
        model.load_state_dict(state_dict)
    return model
