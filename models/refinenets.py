
import torch
import torch.nn as nn

from utils.layer_factory import MFBlock


class Refinenets(nn.Module):

    def __init__(self):
        super(Refinenets, self).__init__()
        self.meta = {'mean': [0, 0, 0],
                     'std': [1, 1, 1],
                     'imageSize': 0}
        self.p_ims1d2_outl1_dimred = nn.Conv2d(2048, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage1_b1_prev_relu = nn.ReLU()
        self.adapt_stage1_b1_conv = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.adapt_stage1_b1_conv_relu = nn.ReLU()
        self.adapt_stage1_b1_conv_relu_varout_dimred = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage1_b2_prev_relu = nn.ReLU()
        self.adapt_stage1_b2_conv = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.adapt_stage1_b2_conv_relu = nn.ReLU()
        self.adapt_stage1_b2_conv_relu_varout_dimred = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.p_ims1d2_outl2_dimred = nn.Conv2d(1024, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage2_b1_prev_relu = nn.ReLU()
        self.adapt_stage2_b1_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.adapt_stage2_b1_conv_relu = nn.ReLU()
        self.adapt_stage2_b1_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage2_b2_prev_relu = nn.ReLU()
        self.adapt_stage2_b2_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.adapt_stage2_b2_conv_relu = nn.ReLU()
        self.adapt_stage2_b2_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.p_ims1d2_outl3_dimred = nn.Conv2d(512, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage3_b1_prev_relu = nn.ReLU()
        self.adapt_stage3_b1_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.adapt_stage3_b1_conv_relu = nn.ReLU()
        self.adapt_stage3_b1_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage3_b2_prev_relu = nn.ReLU()
        self.adapt_stage3_b2_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.adapt_stage3_b2_conv_relu = nn.ReLU()
        self.adapt_stage3_b2_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.p_ims1d2_outl4_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage4_b1_prev_relu = nn.ReLU()
        self.adapt_stage4_b1_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.adapt_stage4_b1_conv_relu = nn.ReLU()
        self.adapt_stage4_b1_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage4_b2_prev_relu = nn.ReLU()
        self.adapt_stage4_b2_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.adapt_stage4_b2_conv_relu = nn.ReLU()
        self.adapt_stage4_b2_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g1_poolprev_relu = nn.ReLU()
        self.mflow_conv_g1_pool1 = nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=2, dilation=1, ceil_mode=False)
        self.mflow_conv_g1_pool1_outvar_dimred = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g1_pool2 = nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=2, dilation=1, ceil_mode=False)
        self.mflow_conv_g1_pool2_outvar_dimred = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g1_pool_joint = MFBlock()
        self.mflow_conv_g1_b1_prev_relu = nn.ReLU()
        self.mflow_conv_g1_b1_conv = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g1_b1_conv_relu = nn.ReLU()
        self.mflow_conv_g1_b1_conv_relu_varout_dimred = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g1_b2_prev_relu = nn.ReLU()
        self.mflow_conv_g1_b2_conv = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g1_b2_conv_relu = nn.ReLU()
        self.mflow_conv_g1_b2_conv_relu_varout_dimred = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g1_b3_prev_relu = nn.ReLU()
        self.mflow_conv_g1_b3_conv = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g1_b3_conv_relu = nn.ReLU()
        self.mflow_conv_g1_b3_conv_relu_varout_dimred = nn.Conv2d(512, 512, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g1_b3_joint_varout_dimred = nn.Conv2d(512, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage2_b2_joint_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_joint_g2 = MFBlock()
        self.mflow_conv_g2_poolprev_relu = nn.ReLU()
        self.mflow_conv_g2_pool1 = nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=2, dilation=1, ceil_mode=False)
        self.mflow_conv_g2_pool1_outvar_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g2_pool2 = nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=2, dilation=1, ceil_mode=False)
        self.mflow_conv_g2_pool2_outvar_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g2_pool_joint = MFBlock()
        self.mflow_conv_g2_b1_prev_relu = nn.ReLU()
        self.mflow_conv_g2_b1_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g2_b1_conv_relu = nn.ReLU()
        self.mflow_conv_g2_b1_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g2_b2_prev_relu = nn.ReLU()
        self.mflow_conv_g2_b2_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g2_b2_conv_relu = nn.ReLU()
        self.mflow_conv_g2_b2_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g2_b3_prev_relu = nn.ReLU()
        self.mflow_conv_g2_b3_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g2_b3_conv_relu = nn.ReLU()
        self.mflow_conv_g2_b3_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g2_b3_joint_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage3_b2_joint_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_joint_g3 = MFBlock()
        self.mflow_conv_g3_poolprev_relu = nn.ReLU()
        self.mflow_conv_g3_pool1 = nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=2, dilation=1, ceil_mode=False)
        self.mflow_conv_g3_pool1_outvar_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g3_pool2 = nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=2, dilation=1, ceil_mode=False)
        self.mflow_conv_g3_pool2_outvar_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g3_pool_joint = MFBlock()
        self.mflow_conv_g3_b1_prev_relu = nn.ReLU()
        self.mflow_conv_g3_b1_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g3_b1_conv_relu = nn.ReLU()
        self.mflow_conv_g3_b1_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g3_b2_prev_relu = nn.ReLU()
        self.mflow_conv_g3_b2_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g3_b2_conv_relu = nn.ReLU()
        self.mflow_conv_g3_b2_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g3_b3_prev_relu = nn.ReLU()
        self.mflow_conv_g3_b3_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g3_b3_conv_relu = nn.ReLU()
        self.mflow_conv_g3_b3_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g3_b3_joint_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.adapt_stage4_b2_joint_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_joint_g4 = MFBlock()
        self.mflow_conv_g4_poolprev_relu = nn.ReLU()
        self.mflow_conv_g4_pool1 = nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=2, dilation=1, ceil_mode=False)
        self.mflow_conv_g4_pool1_outvar_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g4_pool2 = nn.MaxPool2d(kernel_size=[5, 5], stride=[1, 1], padding=2, dilation=1, ceil_mode=False)
        self.mflow_conv_g4_pool2_outvar_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g4_pool_joint = MFBlock()
        self.mflow_conv_g4_b1_prev_relu = nn.ReLU()
        self.mflow_conv_g4_b1_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g4_b1_conv_relu = nn.ReLU()
        self.mflow_conv_g4_b1_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g4_b2_prev_relu = nn.ReLU()
        self.mflow_conv_g4_b2_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g4_b2_conv_relu = nn.ReLU()
        self.mflow_conv_g4_b2_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)
        self.mflow_conv_g4_b3_prev_relu = nn.ReLU()
        self.mflow_conv_g4_b3_conv = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1))
        self.mflow_conv_g4_b3_conv_relu = nn.ReLU()
        self.mflow_conv_g4_b3_conv_relu_varout_dimred = nn.Conv2d(256, 256, kernel_size=[3, 3], stride=(1, 1), padding=(1, 1), bias=False)

    def forward(self, x):
        p_ims1d2_outl1, p_ims1d2_outl2, p_ims1d2_outl3, p_ims1d2_outl4 = x
        p_ims1d2_outl1_dimred_varout = self.p_ims1d2_outl1_dimred(p_ims1d2_outl1)
        adapt_stage1_b1_prev_relu_varout = self.adapt_stage1_b1_prev_relu(p_ims1d2_outl1_dimred_varout)
        adapt_stage1_b1_conv_outvar = self.adapt_stage1_b1_conv(adapt_stage1_b1_prev_relu_varout)
        adapt_stage1_b1_conv_relu_varout = self.adapt_stage1_b1_conv_relu(adapt_stage1_b1_conv_outvar)
        adapt_stage1_b1_conv_relu_varout_dimred_varout = self.adapt_stage1_b1_conv_relu_varout_dimred(adapt_stage1_b1_conv_relu_varout)
        adapt_stage1_b1_joint_varout = torch.add(p_ims1d2_outl1_dimred_varout, 1, adapt_stage1_b1_conv_relu_varout_dimred_varout)
        adapt_stage1_b2_prev_relu_varout = self.adapt_stage1_b2_prev_relu(adapt_stage1_b1_joint_varout)
        adapt_stage1_b2_conv_outvar = self.adapt_stage1_b2_conv(adapt_stage1_b2_prev_relu_varout)
        adapt_stage1_b2_conv_relu_varout = self.adapt_stage1_b2_conv_relu(adapt_stage1_b2_conv_outvar)
        adapt_stage1_b2_conv_relu_varout_dimred_varout = self.adapt_stage1_b2_conv_relu_varout_dimred(adapt_stage1_b2_conv_relu_varout)
        adapt_stage1_b2_joint_varout = torch.add(adapt_stage1_b1_joint_varout, 1, adapt_stage1_b2_conv_relu_varout_dimred_varout)
        p_ims1d2_outl2_dimred_varout = self.p_ims1d2_outl2_dimred(p_ims1d2_outl2)
        adapt_stage2_b1_prev_relu_varout = self.adapt_stage2_b1_prev_relu(p_ims1d2_outl2_dimred_varout)
        adapt_stage2_b1_conv_outvar = self.adapt_stage2_b1_conv(adapt_stage2_b1_prev_relu_varout)
        adapt_stage2_b1_conv_relu_varout = self.adapt_stage2_b1_conv_relu(adapt_stage2_b1_conv_outvar)
        adapt_stage2_b1_conv_relu_varout_dimred_varout = self.adapt_stage2_b1_conv_relu_varout_dimred(adapt_stage2_b1_conv_relu_varout)
        adapt_stage2_b1_joint_varout = torch.add(p_ims1d2_outl2_dimred_varout, 1, adapt_stage2_b1_conv_relu_varout_dimred_varout)
        adapt_stage2_b2_prev_relu_varout = self.adapt_stage2_b2_prev_relu(adapt_stage2_b1_joint_varout)
        adapt_stage2_b2_conv_outvar = self.adapt_stage2_b2_conv(adapt_stage2_b2_prev_relu_varout)
        adapt_stage2_b2_conv_relu_varout = self.adapt_stage2_b2_conv_relu(adapt_stage2_b2_conv_outvar)
        adapt_stage2_b2_conv_relu_varout_dimred_varout = self.adapt_stage2_b2_conv_relu_varout_dimred(adapt_stage2_b2_conv_relu_varout)
        adapt_stage2_b2_joint_varout = torch.add(adapt_stage2_b1_joint_varout, 1, adapt_stage2_b2_conv_relu_varout_dimred_varout)
        p_ims1d2_outl3_dimred_varout = self.p_ims1d2_outl3_dimred(p_ims1d2_outl3)
        adapt_stage3_b1_prev_relu_varout = self.adapt_stage3_b1_prev_relu(p_ims1d2_outl3_dimred_varout)
        adapt_stage3_b1_conv_outvar = self.adapt_stage3_b1_conv(adapt_stage3_b1_prev_relu_varout)
        adapt_stage3_b1_conv_relu_varout = self.adapt_stage3_b1_conv_relu(adapt_stage3_b1_conv_outvar)
        adapt_stage3_b1_conv_relu_varout_dimred_varout = self.adapt_stage3_b1_conv_relu_varout_dimred(adapt_stage3_b1_conv_relu_varout)
        adapt_stage3_b1_joint_varout = torch.add(p_ims1d2_outl3_dimred_varout, 1, adapt_stage3_b1_conv_relu_varout_dimred_varout)
        adapt_stage3_b2_prev_relu_varout = self.adapt_stage3_b2_prev_relu(adapt_stage3_b1_joint_varout)
        adapt_stage3_b2_conv_outvar = self.adapt_stage3_b2_conv(adapt_stage3_b2_prev_relu_varout)
        adapt_stage3_b2_conv_relu_varout = self.adapt_stage3_b2_conv_relu(adapt_stage3_b2_conv_outvar)
        adapt_stage3_b2_conv_relu_varout_dimred_varout = self.adapt_stage3_b2_conv_relu_varout_dimred(adapt_stage3_b2_conv_relu_varout)
        adapt_stage3_b2_joint_varout = torch.add(adapt_stage3_b1_joint_varout, 1, adapt_stage3_b2_conv_relu_varout_dimred_varout)
        p_ims1d2_outl4_dimred_varout = self.p_ims1d2_outl4_dimred(p_ims1d2_outl4)
        adapt_stage4_b1_prev_relu_varout = self.adapt_stage4_b1_prev_relu(p_ims1d2_outl4_dimred_varout)
        adapt_stage4_b1_conv_outvar = self.adapt_stage4_b1_conv(adapt_stage4_b1_prev_relu_varout)
        adapt_stage4_b1_conv_relu_varout = self.adapt_stage4_b1_conv_relu(adapt_stage4_b1_conv_outvar)
        adapt_stage4_b1_conv_relu_varout_dimred_varout = self.adapt_stage4_b1_conv_relu_varout_dimred(adapt_stage4_b1_conv_relu_varout)
        adapt_stage4_b1_joint_varout = torch.add(p_ims1d2_outl4_dimred_varout, 1, adapt_stage4_b1_conv_relu_varout_dimred_varout)
        adapt_stage4_b2_prev_relu_varout = self.adapt_stage4_b2_prev_relu(adapt_stage4_b1_joint_varout)
        adapt_stage4_b2_conv_outvar = self.adapt_stage4_b2_conv(adapt_stage4_b2_prev_relu_varout)
        adapt_stage4_b2_conv_relu_varout = self.adapt_stage4_b2_conv_relu(adapt_stage4_b2_conv_outvar)
        adapt_stage4_b2_conv_relu_varout_dimred_varout = self.adapt_stage4_b2_conv_relu_varout_dimred(adapt_stage4_b2_conv_relu_varout)
        adapt_stage4_b2_joint_varout = torch.add(adapt_stage4_b1_joint_varout, 1, adapt_stage4_b2_conv_relu_varout_dimred_varout)
        mflow_conv_g1_poolprev_relu_varout = self.mflow_conv_g1_poolprev_relu(adapt_stage1_b2_joint_varout)
        mflow_conv_g1_pool1_outvar = self.mflow_conv_g1_pool1(mflow_conv_g1_poolprev_relu_varout)
        mflow_conv_g1_pool1_outvar_dimred_varout = self.mflow_conv_g1_pool1_outvar_dimred(mflow_conv_g1_pool1_outvar)
        mflow_conv_g1_pool2_outvar = self.mflow_conv_g1_pool2(mflow_conv_g1_pool1_outvar_dimred_varout)
        mflow_conv_g1_pool2_outvar_dimred_varout = self.mflow_conv_g1_pool2_outvar_dimred(mflow_conv_g1_pool2_outvar)
        mflow_conv_g1_pool_joint_varout = self.mflow_conv_g1_pool_joint(mflow_conv_g1_poolprev_relu_varout,mflow_conv_g1_pool1_outvar_dimred_varout,mflow_conv_g1_pool2_outvar_dimred_varout)
        mflow_conv_g1_b1_prev_relu_varout = self.mflow_conv_g1_b1_prev_relu(mflow_conv_g1_pool_joint_varout)
        mflow_conv_g1_b1_conv_outvar = self.mflow_conv_g1_b1_conv(mflow_conv_g1_b1_prev_relu_varout)
        mflow_conv_g1_b1_conv_relu_varout = self.mflow_conv_g1_b1_conv_relu(mflow_conv_g1_b1_conv_outvar)
        mflow_conv_g1_b1_conv_relu_varout_dimred_varout = self.mflow_conv_g1_b1_conv_relu_varout_dimred(mflow_conv_g1_b1_conv_relu_varout)
        mflow_conv_g1_b1_joint_varout = torch.add(mflow_conv_g1_pool_joint_varout, 1, mflow_conv_g1_b1_conv_relu_varout_dimred_varout)
        mflow_conv_g1_b2_prev_relu_varout = self.mflow_conv_g1_b2_prev_relu(mflow_conv_g1_b1_joint_varout)
        mflow_conv_g1_b2_conv_outvar = self.mflow_conv_g1_b2_conv(mflow_conv_g1_b2_prev_relu_varout)
        mflow_conv_g1_b2_conv_relu_varout = self.mflow_conv_g1_b2_conv_relu(mflow_conv_g1_b2_conv_outvar)
        mflow_conv_g1_b2_conv_relu_varout_dimred_varout = self.mflow_conv_g1_b2_conv_relu_varout_dimred(mflow_conv_g1_b2_conv_relu_varout)
        mflow_conv_g1_b2_joint_varout = torch.add(mflow_conv_g1_b1_joint_varout, 1, mflow_conv_g1_b2_conv_relu_varout_dimred_varout)
        mflow_conv_g1_b3_prev_relu_varout = self.mflow_conv_g1_b3_prev_relu(mflow_conv_g1_b2_joint_varout)
        mflow_conv_g1_b3_conv_outvar = self.mflow_conv_g1_b3_conv(mflow_conv_g1_b3_prev_relu_varout)
        mflow_conv_g1_b3_conv_relu_varout = self.mflow_conv_g1_b3_conv_relu(mflow_conv_g1_b3_conv_outvar)
        mflow_conv_g1_b3_conv_relu_varout_dimred_varout = self.mflow_conv_g1_b3_conv_relu_varout_dimred(mflow_conv_g1_b3_conv_relu_varout)
        mflow_conv_g1_b3_joint_varout = torch.add(mflow_conv_g1_b2_joint_varout, 1, mflow_conv_g1_b3_conv_relu_varout_dimred_varout)
        mflow_conv_g1_b3_joint_varout_dimred_varout = self.mflow_conv_g1_b3_joint_varout_dimred(mflow_conv_g1_b3_joint_varout)
        adapt_stage2_b2_joint_varout_dimred_varout = self.adapt_stage2_b2_joint_varout_dimred(adapt_stage2_b2_joint_varout)
        mflow_joint_g2_varout = self.mflow_joint_g2(mflow_conv_g1_b3_joint_varout_dimred_varout,adapt_stage2_b2_joint_varout_dimred_varout)
        mflow_conv_g2_poolprev_relu_varout = self.mflow_conv_g2_poolprev_relu(mflow_joint_g2_varout)
        mflow_conv_g2_pool1_outvar = self.mflow_conv_g2_pool1(mflow_conv_g2_poolprev_relu_varout)
        mflow_conv_g2_pool1_outvar_dimred_varout = self.mflow_conv_g2_pool1_outvar_dimred(mflow_conv_g2_pool1_outvar)
        mflow_conv_g2_pool2_outvar = self.mflow_conv_g2_pool2(mflow_conv_g2_pool1_outvar_dimred_varout)
        mflow_conv_g2_pool2_outvar_dimred_varout = self.mflow_conv_g2_pool2_outvar_dimred(mflow_conv_g2_pool2_outvar)
        mflow_conv_g2_pool_joint_varout = self.mflow_conv_g2_pool_joint(mflow_conv_g2_poolprev_relu_varout,mflow_conv_g2_pool1_outvar_dimred_varout,mflow_conv_g2_pool2_outvar_dimred_varout)
        mflow_conv_g2_b1_prev_relu_varout = self.mflow_conv_g2_b1_prev_relu(mflow_conv_g2_pool_joint_varout)
        mflow_conv_g2_b1_conv_outvar = self.mflow_conv_g2_b1_conv(mflow_conv_g2_b1_prev_relu_varout)
        mflow_conv_g2_b1_conv_relu_varout = self.mflow_conv_g2_b1_conv_relu(mflow_conv_g2_b1_conv_outvar)
        mflow_conv_g2_b1_conv_relu_varout_dimred_varout = self.mflow_conv_g2_b1_conv_relu_varout_dimred(mflow_conv_g2_b1_conv_relu_varout)
        mflow_conv_g2_b1_joint_varout = torch.add(mflow_conv_g2_pool_joint_varout, 1, mflow_conv_g2_b1_conv_relu_varout_dimred_varout)
        mflow_conv_g2_b2_prev_relu_varout = self.mflow_conv_g2_b2_prev_relu(mflow_conv_g2_b1_joint_varout)
        mflow_conv_g2_b2_conv_outvar = self.mflow_conv_g2_b2_conv(mflow_conv_g2_b2_prev_relu_varout)
        mflow_conv_g2_b2_conv_relu_varout = self.mflow_conv_g2_b2_conv_relu(mflow_conv_g2_b2_conv_outvar)
        mflow_conv_g2_b2_conv_relu_varout_dimred_varout = self.mflow_conv_g2_b2_conv_relu_varout_dimred(mflow_conv_g2_b2_conv_relu_varout)
        mflow_conv_g2_b2_joint_varout = torch.add(mflow_conv_g2_b1_joint_varout, 1, mflow_conv_g2_b2_conv_relu_varout_dimred_varout)
        mflow_conv_g2_b3_prev_relu_varout = self.mflow_conv_g2_b3_prev_relu(mflow_conv_g2_b2_joint_varout)
        mflow_conv_g2_b3_conv_outvar = self.mflow_conv_g2_b3_conv(mflow_conv_g2_b3_prev_relu_varout)
        mflow_conv_g2_b3_conv_relu_varout = self.mflow_conv_g2_b3_conv_relu(mflow_conv_g2_b3_conv_outvar)
        mflow_conv_g2_b3_conv_relu_varout_dimred_varout = self.mflow_conv_g2_b3_conv_relu_varout_dimred(mflow_conv_g2_b3_conv_relu_varout)
        mflow_conv_g2_b3_joint_varout = torch.add(mflow_conv_g2_b2_joint_varout, 1, mflow_conv_g2_b3_conv_relu_varout_dimred_varout)
        mflow_conv_g2_b3_joint_varout_dimred_varout = self.mflow_conv_g2_b3_joint_varout_dimred(mflow_conv_g2_b3_joint_varout)
        adapt_stage3_b2_joint_varout_dimred_varout = self.adapt_stage3_b2_joint_varout_dimred(adapt_stage3_b2_joint_varout)
        mflow_joint_g3_varout = self.mflow_joint_g3(mflow_conv_g2_b3_joint_varout_dimred_varout,adapt_stage3_b2_joint_varout_dimred_varout)
        mflow_conv_g3_poolprev_relu_varout = self.mflow_conv_g3_poolprev_relu(mflow_joint_g3_varout)
        mflow_conv_g3_pool1_outvar = self.mflow_conv_g3_pool1(mflow_conv_g3_poolprev_relu_varout)
        mflow_conv_g3_pool1_outvar_dimred_varout = self.mflow_conv_g3_pool1_outvar_dimred(mflow_conv_g3_pool1_outvar)
        mflow_conv_g3_pool2_outvar = self.mflow_conv_g3_pool2(mflow_conv_g3_pool1_outvar_dimred_varout)
        mflow_conv_g3_pool2_outvar_dimred_varout = self.mflow_conv_g3_pool2_outvar_dimred(mflow_conv_g3_pool2_outvar)
        mflow_conv_g3_pool_joint_varout = self.mflow_conv_g3_pool_joint(mflow_conv_g3_poolprev_relu_varout,mflow_conv_g3_pool1_outvar_dimred_varout,mflow_conv_g3_pool2_outvar_dimred_varout)
        mflow_conv_g3_b1_prev_relu_varout = self.mflow_conv_g3_b1_prev_relu(mflow_conv_g3_pool_joint_varout)
        mflow_conv_g3_b1_conv_outvar = self.mflow_conv_g3_b1_conv(mflow_conv_g3_b1_prev_relu_varout)
        mflow_conv_g3_b1_conv_relu_varout = self.mflow_conv_g3_b1_conv_relu(mflow_conv_g3_b1_conv_outvar)
        mflow_conv_g3_b1_conv_relu_varout_dimred_varout = self.mflow_conv_g3_b1_conv_relu_varout_dimred(mflow_conv_g3_b1_conv_relu_varout)
        mflow_conv_g3_b1_joint_varout = torch.add(mflow_conv_g3_pool_joint_varout, 1, mflow_conv_g3_b1_conv_relu_varout_dimred_varout)
        mflow_conv_g3_b2_prev_relu_varout = self.mflow_conv_g3_b2_prev_relu(mflow_conv_g3_b1_joint_varout)
        mflow_conv_g3_b2_conv_outvar = self.mflow_conv_g3_b2_conv(mflow_conv_g3_b2_prev_relu_varout)
        mflow_conv_g3_b2_conv_relu_varout = self.mflow_conv_g3_b2_conv_relu(mflow_conv_g3_b2_conv_outvar)
        mflow_conv_g3_b2_conv_relu_varout_dimred_varout = self.mflow_conv_g3_b2_conv_relu_varout_dimred(mflow_conv_g3_b2_conv_relu_varout)
        mflow_conv_g3_b2_joint_varout = torch.add(mflow_conv_g3_b1_joint_varout, 1, mflow_conv_g3_b2_conv_relu_varout_dimred_varout)
        mflow_conv_g3_b3_prev_relu_varout = self.mflow_conv_g3_b3_prev_relu(mflow_conv_g3_b2_joint_varout)
        mflow_conv_g3_b3_conv_outvar = self.mflow_conv_g3_b3_conv(mflow_conv_g3_b3_prev_relu_varout)
        mflow_conv_g3_b3_conv_relu_varout = self.mflow_conv_g3_b3_conv_relu(mflow_conv_g3_b3_conv_outvar)
        mflow_conv_g3_b3_conv_relu_varout_dimred_varout = self.mflow_conv_g3_b3_conv_relu_varout_dimred(mflow_conv_g3_b3_conv_relu_varout)
        mflow_conv_g3_b3_joint_varout = torch.add(mflow_conv_g3_b2_joint_varout, 1, mflow_conv_g3_b3_conv_relu_varout_dimred_varout)
        mflow_conv_g3_b3_joint_varout_dimred_varout = self.mflow_conv_g3_b3_joint_varout_dimred(mflow_conv_g3_b3_joint_varout)
        adapt_stage4_b2_joint_varout_dimred_varout = self.adapt_stage4_b2_joint_varout_dimred(adapt_stage4_b2_joint_varout)
        mflow_joint_g4_varout = self.mflow_joint_g4(mflow_conv_g3_b3_joint_varout_dimred_varout,adapt_stage4_b2_joint_varout_dimred_varout)
        mflow_conv_g4_poolprev_relu_varout = self.mflow_conv_g4_poolprev_relu(mflow_joint_g4_varout)
        mflow_conv_g4_pool1_outvar = self.mflow_conv_g4_pool1(mflow_conv_g4_poolprev_relu_varout)
        mflow_conv_g4_pool1_outvar_dimred_varout = self.mflow_conv_g4_pool1_outvar_dimred(mflow_conv_g4_pool1_outvar)
        mflow_conv_g4_pool2_outvar = self.mflow_conv_g4_pool2(mflow_conv_g4_pool1_outvar_dimred_varout)
        mflow_conv_g4_pool2_outvar_dimred_varout = self.mflow_conv_g4_pool2_outvar_dimred(mflow_conv_g4_pool2_outvar)
        mflow_conv_g4_pool_joint_varout = self.mflow_conv_g4_pool_joint(mflow_conv_g4_poolprev_relu_varout,mflow_conv_g4_pool1_outvar_dimred_varout,mflow_conv_g4_pool2_outvar_dimred_varout)
        mflow_conv_g4_b1_prev_relu_varout = self.mflow_conv_g4_b1_prev_relu(mflow_conv_g4_pool_joint_varout)
        mflow_conv_g4_b1_conv_outvar = self.mflow_conv_g4_b1_conv(mflow_conv_g4_b1_prev_relu_varout)
        mflow_conv_g4_b1_conv_relu_varout = self.mflow_conv_g4_b1_conv_relu(mflow_conv_g4_b1_conv_outvar)
        mflow_conv_g4_b1_conv_relu_varout_dimred_varout = self.mflow_conv_g4_b1_conv_relu_varout_dimred(mflow_conv_g4_b1_conv_relu_varout)
        mflow_conv_g4_b1_joint_varout = torch.add(mflow_conv_g4_pool_joint_varout, 1, mflow_conv_g4_b1_conv_relu_varout_dimred_varout)
        mflow_conv_g4_b2_prev_relu_varout = self.mflow_conv_g4_b2_prev_relu(mflow_conv_g4_b1_joint_varout)
        mflow_conv_g4_b2_conv_outvar = self.mflow_conv_g4_b2_conv(mflow_conv_g4_b2_prev_relu_varout)
        mflow_conv_g4_b2_conv_relu_varout = self.mflow_conv_g4_b2_conv_relu(mflow_conv_g4_b2_conv_outvar)
        mflow_conv_g4_b2_conv_relu_varout_dimred_varout = self.mflow_conv_g4_b2_conv_relu_varout_dimred(mflow_conv_g4_b2_conv_relu_varout)
        mflow_conv_g4_b2_joint_varout = torch.add(mflow_conv_g4_b1_joint_varout, 1, mflow_conv_g4_b2_conv_relu_varout_dimred_varout)
        mflow_conv_g4_b3_prev_relu_varout = self.mflow_conv_g4_b3_prev_relu(mflow_conv_g4_b2_joint_varout)
        mflow_conv_g4_b3_conv_outvar = self.mflow_conv_g4_b3_conv(mflow_conv_g4_b3_prev_relu_varout)
        mflow_conv_g4_b3_conv_relu_varout = self.mflow_conv_g4_b3_conv_relu(mflow_conv_g4_b3_conv_outvar)
        mflow_conv_g4_b3_conv_relu_varout_dimred_varout = self.mflow_conv_g4_b3_conv_relu_varout_dimred(mflow_conv_g4_b3_conv_relu_varout)
        mflow_conv_g4_b3_joint_varout = torch.add(mflow_conv_g4_b2_joint_varout, 1, mflow_conv_g4_b3_conv_relu_varout_dimred_varout)
        return mflow_conv_g4_b3_joint_varout

def refinenets(weights_path=None, **kwargs):
    """
    load imported model instance

    Args:
        weights_path (str): If set, loads model weights from the given path
    """
    model = Refinenets()
    if weights_path:
        state_dict = torch.load(weights_path)
        model.load_state_dict(state_dict)
    return model
